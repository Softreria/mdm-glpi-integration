#!/usr/bin/env python3
"""Script de prueba r√°pida para verificar la conexi√≥n con Zoho MDM."""

import asyncio
import os
import sys
from pathlib import Path

# Agregar el directorio src al path
sys.path.insert(0, str(Path(__file__).parent / "src"))

from mdm_glpi_integration.config.settings import Settings
from mdm_glpi_integration.connectors.mdm_connector import ManageEngineMDMConnector


async def test_zoho_connection():
    """Probar la conexi√≥n con Zoho MDM usando el token configurado."""
    print("üîç Probando conexi√≥n con Zoho MDM...")
    
    try:
        # Cargar configuraci√≥n
        settings = Settings()
        print(f"üìã URL Base: {settings.mdm.base_url}")
        print(f"üîë Token configurado: {settings.mdm.api_key[:20]}...")
        
        # Crear conector
        connector = ManageEngineMDMConnector(settings.mdm)
        
        # Probar conexi√≥n
        print("\nüîó Probando conectividad...")
        is_connected = await connector.test_connection()
        
        if is_connected:
            print("‚úÖ ¬°Conexi√≥n exitosa con Zoho MDM!")
            
            # Intentar obtener informaci√≥n b√°sica
            try:
                print("\nüì± Obteniendo informaci√≥n de dispositivos...")
                # Hacer una consulta b√°sica para verificar que el token funciona
                response = await connector._make_request("GET", "/", params={"limit": 1})
                print(f"‚úÖ Respuesta recibida: {len(response.get('devices', []))} dispositivos encontrados")
                
            except Exception as e:
                print(f"‚ö†Ô∏è  Conexi√≥n OK pero error al obtener datos: {e}")
                
        else:
            print("‚ùå Error de conexi√≥n con Zoho MDM")
            return False
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return False
    
    finally:
        # Cerrar conexi√≥n
        if 'connector' in locals():
            await connector.close()
    
    return True


if __name__ == "__main__":
    print("üöÄ Test de Conexi√≥n Zoho MDM")
    print("=" * 40)
    
    # Verificar que existe el archivo .env
    env_file = Path(".env")
    if not env_file.exists():
        print("‚ö†Ô∏è  Archivo .env no encontrado. Creando uno de ejemplo...")
        print("Por favor, configura tu token de Zoho en el archivo .env")
        sys.exit(1)
    
    # Ejecutar prueba
    success = asyncio.run(test_zoho_connection())
    
    if success:
        print("\nüéâ ¬°Configuraci√≥n de Zoho completada correctamente!")
        print("Ya puedes usar la aplicaci√≥n MDM-GLPI con tu token de Zoho.")
    else:
        print("\n‚ùå Hay problemas con la configuraci√≥n.")
        print("Verifica tu token de Zoho y la conectividad de red.")
        sys.exit(1)